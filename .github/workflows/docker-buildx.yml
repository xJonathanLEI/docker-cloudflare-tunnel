name: Build Multi-Arch Images

on:
  create:

jobs:
  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest

    env:
      DOCKER_REPOSITORY: xjonathanlei/cloudflare-tunnel

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Enable Docker Buildx
        run: |
          jq '. + {"experimental":"enabled"}' ~/.docker/config.json > ~/.docker/config_new.json
          mv ~/.docker/config_new.json ~/.docker/config.json
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          sudo systemctl restart docker
          docker buildx create --name multi_builder
          docker buildx use multi_builder

      - name: Determine Image Version
        run: |
          version_line="${{ github.ref }}"
          regex="^refs\/tags\/v(.*)$"
          [[ $version_line =~ $regex ]];
          echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV

      - name: Build linux/amd64 Image
        run: |
          docker buildx build -t ${DOCKER_REPOSITORY}:${VERSION}-amd64 -f ./Dockerfile.amd64 --platform linux/amd64 --output=type=docker .

      - name: Build linux/arm64 Image
        run: |
          docker buildx build -t ${DOCKER_REPOSITORY}:${VERSION}-arm64 -f ./Dockerfile.arm64 --platform linux/arm64 --output=type=docker .

      - name: Push Multi-Arch Images
        run: |
          docker push ${DOCKER_REPOSITORY}:${VERSION}-amd64
          docker push ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:${VERSION} \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:latest \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest push ${DOCKER_REPOSITORY}:${VERSION}
          docker manifest push ${DOCKER_REPOSITORY}:latest
